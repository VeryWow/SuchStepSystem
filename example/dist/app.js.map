{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","classes/Step.js","classes/StepSystem.js","example/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class Step {\n  constructor (params) {\n    this.parent = params.parent || null\n    this.name = params.name\n    this.next = params.next\n    this.methods = params.methods || {}\n    this.template = params.template || ''\n    this.ignore_progress = params.ignore_progress || false\n    this.from = null\n    this._data = params.data || {}\n    params.interceptors = params.interceptors || {}\n    this.interceptors = {\n      beforeRender: params.interceptors.beforeRender || this.methods.beforeRender || function () {\n        return {status: true}\n      },\n      beforeNext: params.interceptors.beforeNext || this.methods.beforeNext || function () {\n        return {status: true}\n      },\n      beforeBack: params.interceptors.beforeBack || this.methods.beforeBack || function () {\n        return {status: true}\n      }\n    }\n  }\n\n  /* LINKS */\n  get goNext () { return this.parent.goNext }\n  get goBack () { return this.parent.goBack }\n  get goToStep () { return this.parent.goToStep }\n\n  get data () {\n    return this._data\n  }\n}\n","/**\n * StepSystem v1.0.0\n * Last update: 17.05.2017\n *\n * Dependencies: jQuery\n *\n * @author kaskar2008\n */\n\nexport class StepSystem {\n  /**\n   * @param  {jQuery element} container\n   */\n  constructor (params) {\n    this._steps = {}\n    this._current_step = null\n    this._container = params.container || $('.step-system')\n    this._step_container = params.step_class || '.step'\n    this._next_timeout = null\n    this.steps_past = []\n    this.progress = 0\n    this.commonHandlers = function () {}\n    this.onFinish = function () {}\n    this.onProgress = function () {}\n    this.onStepRender = function () {}\n  }\n\n  /**\n   * Add new step\n   * @param {Step} step\n   */\n  addStep (step) {\n    step.parent = this\n    this._steps[step.name] = step\n    return this\n  }\n\n  setHandlers (cb) {\n    this.commonHandlers = cb\n    return this\n  }\n\n  get current_step () {\n    return this.step(this._current_step) || null\n  }\n\n  step (name) {\n    return this._steps[name]\n  }\n\n  get container () {\n    return this._container\n  }\n\n  get steps () {\n    return this._steps\n  }\n\n  render (step) {\n    let _br = step.interceptors.beforeRender()\n    if (!_br.status) {\n      if (_br.onError) _br.onError()\n      return this\n    }\n    this.container.find(this._step_container).html(step.template || this._container.find(`#${step.name}`).html())\n    this.container.find(this._step_container).attr('data-name', step.name)\n    this.onStepRender(step)\n    if (step.methods.onRender) {\n      step.methods.onRender()\n    }\n  }\n\n  updateProgress () {\n    let future_steps = 0\n    let iteration_step = this.current_step\n    let iteration_next_step = iteration_step.next\n    while (iteration_next_step) {\n      if (!iteration_step.ignore_progress) {\n        future_steps++\n      }\n      iteration_step = this.step(iteration_next_step)\n      iteration_next_step = iteration_step.next\n    }\n    this.progress = (this.steps_past.length * 100) / (this.steps_past.length + future_steps)\n    this.onProgress(this.progress)\n  }\n\n  goNextTimeout (timeout = 300) {\n    const $this = this\n    clearTimeout(this._next_timeout)\n    this._next_timeout = setTimeout(function () {\n      $this.goNext()\n    }, timeout)\n  }\n\n  goNext () {\n    let curr_step = this.current_step || {}\n    let next_step = curr_step.next || null\n    let _bn = curr_step.interceptors.beforeNext()\n    if (!_bn.status) {\n      if (_bn.onError) _bn.onError()\n      return this\n    }\n    if (next_step) {\n      this.goToStep(this.step(next_step), { from: curr_step.name })\n    } else {\n      if (this.onFinish) {\n        this.onFinish()\n      }\n    }\n  }\n\n  goBack () {\n    let curr_step = this.current_step || {}\n    let prev_step = curr_step.from || null\n    let _bb = curr_step.interceptors.beforeBack()\n    if (!_bb.status) {\n      if (_bb.onError) _bb.onError()\n      return this\n    }\n    if (prev_step) {\n      this.steps_past.pop()\n      this.goToStep(this.step(prev_step), { is_back: true })\n    }\n  }\n\n  goToStep (step, params = {}) {\n    let from = params.from || null\n    let is_back = params.is_back || false\n    if (from) {\n      step.from = from\n    }\n    this._current_step = step.name\n    this.render(step)\n    if (this.steps_past.indexOf(step.name) < 0 && !is_back) {\n      this.steps_past.push(step.name)\n    }\n    this.updateProgress()\n  }\n\n  collectData () {\n    let data = {}\n    for (var step in this.steps_past) {\n      data[this.steps_past[step]] = this.step(this.steps_past[step]).data\n    }\n    return data\n  }\n\n  init (from_step) {\n    this.commonHandlers()\n    this._current_step = from_step\n    this.goToStep(this.step(this._current_step))\n  }\n}\n","import { Step } from '../classes/Step'\nimport { StepSystem } from '../classes/StepSystem'\n\nwindow.app = new StepSystem($('.container'));\n\n(function (app) {\n\n  const first_step = 'first-step'\n\n  app\n  /**\n   * COMMON HANDLERS\n   */\n  .setHandlers(() => {\n    console.log('handlers init')\n  })\n  \n  /**\n   * FIRST STEP\n   */\n  .addStep(new Step({\n    name: 'first-step',\n    next: 'second-step',\n    methods: {\n      beforeRender: () => {\n        console.log('first-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: () => {\n        console.log('first-step beforeNext', this)\n        app.current_step.data.lol = 'lol'\n        return { status: true }\n      },\n      onRender: () => {\n        app.container.find('.step').css({'color': 'green'})\n      }\n    }\n  }))\n\n  /**\n   * SECOND STEP\n   */\n  .addStep(new Step({\n    name: 'second-step',\n    next: 'third-step',\n    methods: {\n      beforeRender: () => {\n        console.log('second-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: () => {\n        console.log('second-step beforeNext')\n        app.current_step.data.azaza = 'azaza'\n        return { status: true }\n      },\n      onRender: () => {\n        app.container.find('.step').css({'color': 'red'})\n      }\n    }\n  }))\n\n  /**\n   * THIRD STEP\n   */\n  .addStep(new Step({\n    name: 'third-step',\n    methods: {\n      beforeRender: () => {\n        console.log('third-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: () => {\n        console.log('third-step beforeNext')\n        app.current_step.data.kek = 'kek'\n        return { status: true }\n      },\n      onRender: () => {\n        app.container.find('.step').css({'color': 'blue'})\n      }\n    }\n  }))\n\n  app.onFinish = () => {\n    console.log(app.collectData())\n  }\n\n  app.onProgress = (progress) => {\n    app.container.find('.progress').html(Math.floor(progress) + '%')\n  }\n\n  app.init(first_step)\n\n})(window.app)\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","classes/Step.js","classes/StepSystem.js","example/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class Step {\n  constructor (params) {\n    this.parent = params.parent || null\n    this.name = params.name\n    this.next = params.next\n    this.methods = params.methods || {}\n    this.template = params.template || ''\n    this.ignore_progress = params.ignore_progress || false\n    this.hide_progress = params.hide_progress || false\n    this.from = null\n    this.required = params.required || false\n    this._data = params.data || {}\n    params.interceptors = params.interceptors || {}\n    this.interceptors = {\n      isSkip: params.interceptors.isSkip || this.methods.isSkip || function () {\n        return false\n      },\n      beforeRender: params.interceptors.beforeRender || this.methods.beforeRender || function () {\n        return {status: true}\n      },\n      beforeNext: params.interceptors.beforeNext || this.methods.beforeNext || function () {\n        return {status: true}\n      },\n      beforeBack: params.interceptors.beforeBack || this.methods.beforeBack || function () {\n        return {status: true}\n      }\n    }\n  }\n\n  /* LINKS */\n  get goNext () { return this.parent.goNext }\n  get goBack () { return this.parent.goBack }\n  get goToStep () { return this.parent.goToStep }\n\n  get data () {\n    return this._data\n  }\n\n  get container () {\n    return this.parent.container.find(this.parent._step_container)\n  }\n\n  call (method, ...args) {\n    let fnc = this.methods[method] || this.interceptors[method]\n    if (fnc) {\n      return fnc.apply(this, args)\n    }\n  }\n}\n","/**\n * StepSystem v1.0.1\n * Last update: 25.05.2017\n *\n * Dependencies: jQuery\n *\n * @author kaskar2008\n */\n\nexport class StepSystem {\n  /**\n   * @param  {jQuery element} container\n   */\n  constructor (params) {\n    this._steps = {}\n    this._current_step = null\n    this._container = params.container || $('.step-system')\n    this._step_container = params.step_class || '.step'\n    this._next_timeout = null\n    this.steps_past = []\n    this.progress = 0\n    this.commonHandlers = function () {}\n    this.onFinish = function () {}\n    this.onProgress = function () {}\n    this.onStepRender = function () {}\n\n    this._global_interceptors = {\n      isSkipGlobal: function (step) {\n        return step.interceptors.isSkip(step)\n      }\n    }\n  }\n\n  /**\n   * Add new step\n   * @param {Step} step\n   */\n  addStep (step) {\n    step.parent = this\n    this._steps[step.name] = step\n    return this\n  }\n\n  setGlobalInterceptors (interceptors) {\n    this._global_interceptors = Object.assign(this._global_interceptors, interceptors)\n    return this\n  }\n\n  setHandlers (cb) {\n    this.commonHandlers = cb\n    return this\n  }\n\n  get global_interceptors () {\n    return this._global_interceptors\n  }\n\n  get current_step () {\n    return this.step(this._current_step) || null\n  }\n\n  step (name) {\n    return this._steps[name]\n  }\n\n  get container () {\n    return this._container\n  }\n\n  get steps () {\n    return this._steps\n  }\n\n  get all_data () {\n    return this.collectData()\n  }\n\n  render (step) {\n    let _br = step.call('beforeRender', step)\n    if (!_br.status) {\n      if (_br.onError) _br.onError.apply(step)\n      return this\n    }\n    this.container.find(this._step_container).html(step.template || this._container.find(`#${step.name}`).html())\n    this.container.find(this._step_container).attr('data-name', step.name)\n    this.onStepRender(step)\n    step.call('onRender', step)\n  }\n\n  updateProgress () {\n    let future_steps = 0\n    let iteration_step = this.current_step\n    let iteration_next_step = iteration_step.next\n    while (iteration_next_step) {\n      if (!iteration_step.ignore_progress) {\n        future_steps++\n      }\n      iteration_step = this.step(iteration_next_step)\n      iteration_next_step = iteration_step.next\n    }\n    this.progress = (this.steps_past.length * 100) / (this.steps_past.length + future_steps)\n    this.onProgress(this.progress)\n  }\n\n  goNextTimeout (timeout = 300) {\n    const $this = this\n    clearTimeout(this._next_timeout)\n    this._next_timeout = setTimeout(function () {\n      $this.goNext()\n    }, timeout)\n  }\n\n  goNext () {\n    let curr_step = this.current_step || {}\n    let _bn = curr_step.call('beforeNext', curr_step)\n    if (!_bn.status) {\n      if (_bn.onError) _bn.onError.apply(curr_step)\n      return this\n    }\n    let next_step = curr_step.next || null\n    if (next_step) {\n      this.goToStep(this.step(next_step), { from: curr_step.name })\n    } else {\n      if (this.onFinish) {\n        this.onFinish()\n      }\n    }\n    return this\n  }\n\n  goBack () {\n    let curr_step = this.current_step || {}\n    let prev_step = curr_step.from || null\n    let _bb = curr_step.call('beforeBack', curr_step) || { status: false }\n    if (!_bb.status) {\n      if (_bb.onError) _bb.onError.apply(curr_step)\n      return this\n    }\n    if (prev_step) {\n      if (_bb.status) {\n        this.steps_past.pop()\n      }\n      this.goToStep(this.step(prev_step), { is_back: true })\n    }\n    return this\n  }\n\n  goToStep (step, params = {}) {\n    let is_skip = this.global_interceptors.isSkipGlobal(step)\n    if (is_skip) {\n      step = this.step(step.next)\n    }\n    let from = params.from || null\n    let is_back = params.is_back || false\n    if (from) {\n      step.from = from\n    }\n    this.render(step)\n    this._current_step = step.name\n    if (this.steps_past.indexOf(step.name) < 0) {\n      this.steps_past.push(step.name)\n    }\n    this.updateProgress()\n    return this\n  }\n\n  collectData () {\n    let data = {}\n    for (var step in this.steps) {\n      if (this.step(step).data) {\n        data[step] = this.step(step).data\n      }\n    }\n    return data\n  }\n\n  init (first_step) {\n    this.first_step = first_step\n    this.commonHandlers()\n    this._current_step = this.first_step\n    this.goToStep(this.step(this._current_step))\n  }\n}\n","import { Step } from '../classes/Step'\nimport { StepSystem } from '../classes/StepSystem'\n\nwindow.app = new StepSystem({\n  container: $('.container'),\n  step_class: '.step'\n});\n\n(function (app) {\n\n  const first_step = 'first-step'\n\n  app\n  /**\n   * COMMON HANDLERS\n   */\n  .setHandlers(() => {\n    console.log('handlers init')\n\n  })\n  \n  /**\n   * FIRST STEP\n   */\n  .addStep(new Step({\n    name: 'first-step',\n    next: 'second-step',\n    methods: {\n      beforeRender: (step) => {\n        console.log('first-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: (step) => {\n        console.log('first-step beforeNext', this)\n        step.data.lol = 'lol'\n        return { status: true }\n      },\n      onRender: (step) => {\n        app.container.find('.step').css({'color': 'green'})\n      }\n    }\n  }))\n\n  /**\n   * SECOND STEP\n   */\n  .addStep(new Step({\n    name: 'second-step',\n    next: 'third-step',\n    methods: {\n      isSkip: (step) => {\n        return app.step('first-step').data.lol == 'lol'\n      },\n      beforeRender: (step) => {\n        console.log('second-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: (step) => {\n        console.log('second-step beforeNext')\n        step.data.azaza = 'azaza'\n        return { status: true }\n      },\n      onRender: (step) => {\n        app.container.find('.step').css({'color': 'red'})\n      }\n    }\n  }))\n\n  /**\n   * THIRD STEP\n   */\n  .addStep(new Step({\n    name: 'third-step',\n    methods: {\n      beforeRender: (step) => {\n        console.log('third-step beforeRender')\n        return { status: true }\n      },\n      beforeNext: (step) => {\n        console.log('third-step beforeNext')\n        step.data.kek = 'kek'\n        return { status: true }\n      },\n      onRender: (step) => {\n        app.container.find('.step').css({'color': 'blue'})\n      }\n    }\n  }))\n\n  /**\n   * FINISH\n   */\n  .addStep(new Step({\n    name: 'finish',\n    hide_progress: true,\n    ignore_progress: true,\n    methods: {\n      beforeRender: (step) => {\n        console.log('finish beforeRender')\n        return { status: true }\n      },\n      beforeNext: (step) => {\n        console.log('finish beforeNext')\n        step.data.kek = 'kek'\n        return { status: true }\n      },\n      onRender: (step) => {\n        step.call('anyOfInternalMethods')\n      },\n      anyOfInternalMethods: () => {\n        alert ('Hey there')\n      }\n    }\n  }))\n\n  /**\n   * GLOBAL\n   */\n\n  app.onFinish = () => {\n    app.goToStep(app.step('finish'))\n    console.log(app.collectData())\n  }\n\n  app.onProgress = (progress) => {\n    app.container.find('.progress').html(Math.floor(progress) + '%')\n  }\n\n  app.onStepRender = (step) => {\n    app.container.find('.step .next').click(function () {\n      app.goNext()\n    })\n    app.container.find('.step .back').click(function () {\n      app.goBack()\n    })\n\n    console.log(step)\n\n    if (step.hide_progress) {\n      app.container.find('.progress').hide()\n    } else {\n      app.container.find('.progress').show()\n    }\n  }\n\n  app.init(first_step)\n\n})(window.app)\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjbGFzc2VzL1N0ZXAuanMiLCJjbGFzc2VzL1N0ZXBTeXN0ZW0uanMiLCJleGFtcGxlL2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUNBYSxJLFdBQUEsSTtBQUNYLGdCQUFhLE1BQWIsRUFBcUI7QUFBQTs7QUFDbkIsU0FBSyxNQUFMLEdBQWMsT0FBTyxNQUFQLElBQWlCLElBQS9CO0FBQ0EsU0FBSyxJQUFMLEdBQVksT0FBTyxJQUFuQjtBQUNBLFNBQUssSUFBTCxHQUFZLE9BQU8sSUFBbkI7QUFDQSxTQUFLLE9BQUwsR0FBZSxPQUFPLE9BQVAsSUFBa0IsRUFBakM7QUFDQSxTQUFLLFFBQUwsR0FBZ0IsT0FBTyxRQUFQLElBQW1CLEVBQW5DO0FBQ0EsU0FBSyxlQUFMLEdBQXVCLE9BQU8sZUFBUCxJQUEwQixLQUFqRDtBQUNBLFNBQUssYUFBTCxHQUFxQixPQUFPLGFBQVAsSUFBd0IsS0FBN0M7QUFDQSxTQUFLLElBQUwsR0FBWSxJQUFaO0FBQ0EsU0FBSyxRQUFMLEdBQWdCLE9BQU8sUUFBUCxJQUFtQixLQUFuQztBQUNBLFNBQUssS0FBTCxHQUFhLE9BQU8sSUFBUCxJQUFlLEVBQTVCO0FBQ0EsV0FBTyxZQUFQLEdBQXNCLE9BQU8sWUFBUCxJQUF1QixFQUE3QztBQUNBLFNBQUssWUFBTCxHQUFvQjtBQUNsQixjQUFRLE9BQU8sWUFBUCxDQUFvQixNQUFwQixJQUE4QixLQUFLLE9BQUwsQ0FBYSxNQUEzQyxJQUFxRCxZQUFZO0FBQ3ZFLGVBQU8sS0FBUDtBQUNELE9BSGlCO0FBSWxCLG9CQUFjLE9BQU8sWUFBUCxDQUFvQixZQUFwQixJQUFvQyxLQUFLLE9BQUwsQ0FBYSxZQUFqRCxJQUFpRSxZQUFZO0FBQ3pGLGVBQU8sRUFBQyxRQUFRLElBQVQsRUFBUDtBQUNELE9BTmlCO0FBT2xCLGtCQUFZ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bkIsRUFBZ0MsSUFBaEM7QUFDRDtBQUNGLEdBZkQ7O0FBaUJBLE1BQUksSUFBSixDQUFTLFVBQVQ7QUFFRCxDQTNJRCxFQTJJRyxPQUFPLEdBM0lWIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydCBjbGFzcyBTdGVwIHtcbiAgY29uc3RydWN0b3IgKHBhcmFtcykge1xuICAgIHRoaXMucGFyZW50ID0gcGFyYW1zLnBhcmVudCB8fCBudWxsXG4gICAgdGhpcy5uYW1lID0gcGFyYW1zLm5hbWVcbiAgICB0aGlzLm5leHQgPSBwYXJhbXMubmV4dFxuICAgIHRoaXMubWV0aG9kcyA9IHBhcmFtcy5tZXRob2RzIHx8IHt9XG4gICAgdGhpcy50ZW1wbGF0ZSA9IHBhcmFtcy50ZW1wbGF0ZSB8fCAnJ1xuICAgIHRoaXMuaWdub3JlX3Byb2dyZXNzID0gcGFyYW1zLmlnbm9yZV9wcm9ncmVzcyB8fCBmYWxzZVxuICAgIHRoaXMuaGlkZV9wcm9ncmVzcyA9IHBhcmFtcy5oaWRlX3Byb2dyZXNzIHx8IGZhbHNlXG4gICAgdGhpcy5mcm9tID0gbnVsbFxuICAgIHRoaXMucmVxdWlyZWQgPSBwYXJhbXMucmVxdWlyZWQgfHwgZmFsc2VcbiAgICB0aGlzLl9kYXRhID0gcGFyYW1zLmRhdGEgfHwge31cbiAgICBwYXJhbXMuaW50ZXJjZXB0b3JzID0gcGFyYW1zLmludGVyY2VwdG9ycyB8fCB7fVxuICAgIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgICAgaXNTa2lwOiBwYXJhbXMuaW50ZXJjZXB0b3JzLmlzU2tpcCB8fCB0aGlzLm1ldGhvZHMuaXNTa2lwIHx8IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9LFxuICAgICAgYmVmb3JlUmVuZGVyOiBwYXJhbXMuaW50ZXJjZXB0b3JzLmJlZm9yZVJlbmRlciB8fCB0aGlzLm1ldGhvZHMuYmVmb3JlUmVuZGVyIHx8IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtzdGF0dXM6IHRydWV9XG4gICAgICB9LFxuICAgICAgYmVmb3JlTmV4dDogcGFyYW1zLmludGVyY2VwdG9ycy5iZWZvcmVOZXh0IHx8IHRoaXMubWV0aG9kcy5iZWZvcmVOZXh0IHx8IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtzdGF0dXM6IHRydWV9XG4gICAgICB9LFxuICAgICAgYmVmb3JlQmFjazogcGFyYW1zLmludGVyY2VwdG9ycy5iZWZvcmVCYWNrIHx8IHRoaXMubWV0aG9kcy5iZWZvcmVCYWNrIHx8IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtzdGF0dXM6IHRydWV9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyogTElOS1MgKi9cbiAgZ2V0IGdvTmV4dCAoKSB7IHJldHVybiB0aGlzLnBhcmVudC5nb05leHQgfVxuICBnZXQgZ29CYWNrICgpIHsgcmV0dXJuIHRoaXMucGFyZW50LmdvQmFjayB9XG4gIGdldCBnb1RvU3RlcCAoKSB7IHJldHVybiB0aGlzLnBhcmVudC5nb1RvU3RlcCB9XG5cbiAgZ2V0IGRhdGEgKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhXG4gIH1cblxuICBnZXQgY29udGFpbmVyICgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnQuY29udGFpbmVyLmZpbmQodGhpcy5wYXJlbnQuX3N0ZXBfY29udGFpbmVyKVxuICB9XG5cbiAgY2FsbCAobWV0aG9kLCAuLi5hcmdzKSB7XG4gICAgbGV0IGZuYyA9IHRoaXMubWV0aG9kc1ttZXRob2RdIHx8IHRoaXMuaW50ZXJjZXB0b3JzW21ldGhvZF1cbiAgICBpZiAoZm5jKSB7XG4gICAgICByZXR1cm4gZm5jLmFwcGx5KHRoaXMsIGFyZ3MpXG4gICAgfVxuICB9XG59XG4iLCIvKipcbiAqIFN0ZXBTeXN0ZW0gdjEuMC4xXG4gKiBMYXN0IHVwZGF0ZTogMjUuMDUuMjAxN1xuICpcbiAqIERlcGVuZGVuY2llczogalF1ZXJ5XG4gKlxuICogQGF1dGhvciBrYXNrYXIyMDA4XG4gKi9cblxuZXhwb3J0IGNsYXNzIFN0ZXBTeXN0ZW0ge1xuICAvKipcbiAgICogQHBhcmFtICB7alF1ZXJ5IGVsZW1lbnR9IGNvbnRhaW5lclxuICAgKi9cbiAgY29uc3RydWN0b3IgKHBhcmFtcykge1xuICAgIHRoaXMuX3N0ZXBzID0ge31cbiAgICB0aGlzLl9jdXJyZW50X3N0ZXAgPSBudWxsXG4gICAgdGhpcy5fY29udGFpbmVyID0gcGFyYW1zLmNvbnRhaW5lciB8fCAkKCcuc3RlcC1zeXN0ZW0nKVxuICAgIHRoaXMuX3N0ZXBfY29udGFpbmVyID0gcGFyYW1zLnN0ZXBfY2xhc3MgfHwgJy5zdGVwJ1xuICAgIHRoaXMuX25leHRfdGltZW91dCA9IG51bGxcbiAgICB0aGlzLnN0ZXBzX3Bhc3QgPSBbXVxuICAgIHRoaXMucHJvZ3Jlc3MgPSAwXG4gICAgdGhpcy5jb21tb25IYW5kbGVycyA9IGZ1bmN0aW9uICgpIHt9XG4gICAgdGhpcy5vbkZpbmlzaCA9IGZ1bmN0aW9uICgpIHt9XG4gICAgdGhpcy5vblByb2dyZXNzID0gZnVuY3Rpb24gKCkge31cbiAgICB0aGlzLm9uU3RlcFJlbmRlciA9IGZ1bmN0aW9uICgpIHt9XG5cbiAgICB0aGlzLl9nbG9iYWxfaW50ZXJjZXB0b3JzID0ge1xuICAgICAgaXNTa2lwR2xvYmFsOiBmdW5jdGlvbiAoc3RlcCkge1xuICAgICAgICByZXR1cm4gc3RlcC5pbnRlcmNlcHRvcnMuaXNTa2lwKHN0ZXApXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBuZXcgc3RlcFxuICAgKiBAcGFyYW0ge1N0ZXB9IHN0ZXBcbiAgICovXG4gIGFkZFN0ZXAgKHN0ZXApIHtcbiAgICBzdGVwLnBhcmVudCA9IHRoaXNcbiAgICB0aGlzLl9zdGVwc1tzdGVwLm5hbWVdID0gc3RlcFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBzZXRHbG9iYWxJbnRlcmNlcHRvcnMgKGludGVyY2VwdG9ycykge1xuICAgIHRoaXMuX2dsb2JhbF9pbnRlcmNlcHRvcnMgPSBPYmplY3QuYXNzaWduKHRoaXMuX2dsb2JhbF9pbnRlcmNlcHRvcnMsIGludGVyY2VwdG9ycylcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgc2V0SGFuZGxlcnMgKGNiKSB7XG4gICAgdGhpcy5jb21tb25IYW5kbGVycyA9IGNiXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIGdldCBnbG9iYWxfaW50ZXJjZXB0b3JzICgpIHtcbiAgICByZXR1cm4gdGhpcy5fZ2xvYmFsX2ludGVyY2VwdG9yc1xuICB9XG5cbiAgZ2V0IGN1cnJlbnRfc3RlcCAoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RlcCh0aGlzLl9jdXJyZW50X3N0ZXApIHx8IG51bGxcbiAgfVxuXG4gIHN0ZXAgKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RlcHNbbmFtZV1cbiAgfVxuXG4gIGdldCBjb250YWluZXIgKCkge1xuICAgIHJldHVybiB0aGlzLl9jb250YWluZXJcbiAgfVxuXG4gIGdldCBzdGVwcyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0ZXBzXG4gIH1cblxuICBnZXQgYWxsX2RhdGEgKCkge1xuICAgIHJldHVybiB0aGlzLmNvbGxlY3REYXRhKClcbiAgfVxuXG4gIHJlbmRlciAoc3RlcCkge1xuICAgIGxldCBfYnIgPSBzdGVwLmNhbGwoJ2JlZm9yZVJlbmRlcicsIHN0ZXApXG4gICAgaWYgKCFfYnIuc3RhdHVzKSB7XG4gICAgICBpZiAoX2JyLm9uRXJyb3IpIF9ici5vbkVycm9yLmFwcGx5KHN0ZXApXG4gICAgICByZXR1cm4gdGhpc1xuICAgIH1cbiAgICB0aGlzLmNvbnRhaW5lci5maW5kKHRoaXMuX3N0ZXBfY29udGFpbmVyKS5odG1sKHN0ZXAudGVtcGxhdGUgfHwgdGhpcy5fY29udGFpbmVyLmZpbmQoYCMke3N0ZXAubmFtZX1gKS5odG1sKCkpXG4gICAgdGhpcy5jb250YWluZXIuZmluZCh0aGlzLl9zdGVwX2NvbnRhaW5lcikuYXR0cignZGF0YS1uYW1lJywgc3RlcC5uYW1lKVxuICAgIHRoaXMub25TdGVwUmVuZGVyKHN0ZXApXG4gICAgc3RlcC5jYWxsKCdvblJlbmRlcicsIHN0ZXApXG4gIH1cblxuICB1cGRhdGVQcm9ncmVzcyAoKSB7XG4gICAgbGV0IGZ1dHVyZV9zdGVwcyA9IDBcbiAgICBsZXQgaXRlcmF0aW9uX3N0ZXAgPSB0aGlzLmN1cnJlbnRfc3RlcFxuICAgIGxldCBpdGVyYXRpb25fbmV4dF9zdGVwID0gaXRlcmF0aW9uX3N0ZXAubmV4dFxuICAgIHdoaWxlIChpdGVyYXRpb25fbmV4dF9zdGVwKSB7XG4gICAgICBpZiAoIWl0ZXJhdGlvbl9zdGVwLmlnbm9yZV9wcm9ncmVzcykge1xuICAgICAgICBmdXR1cmVfc3RlcHMrK1xuICAgICAgfVxuICAgICAgaXRlcmF0aW9uX3N0ZXAgPSB0aGlzLnN0ZXAoaXRlcmF0aW9uX25leHRfc3RlcClcbiAgICAgIGl0ZXJhdGlvbl9uZXh0X3N0ZXAgPSBpdGVyYXRpb25fc3RlcC5uZXh0XG4gICAgfVxuICAgIHRoaXMucHJvZ3Jlc3MgPSAodGhpcy5zdGVwc19wYXN0Lmxlbmd0aCAqIDEwMCkgLyAodGhpcy5zdGVwc19wYXN0Lmxlbmd0aCArIGZ1dHVyZV9zdGVwcylcbiAgICB0aGlzLm9uUHJvZ3Jlc3ModGhpcy5wcm9ncmVzcylcbiAgfVxuXG4gIGdvTmV4dFRpbWVvdXQgKHRpbWVvdXQgPSAzMDApIHtcbiAgICBjb25zdCAkdGhpcyA9IHRoaXNcbiAgICBjbGVhclRpbWVvdXQodGhpcy5fbmV4dF90aW1lb3V0KVxuICAgIHRoaXMuX25leHRfdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgJHRoaXMuZ29OZXh0KClcbiAgICB9LCB0aW1lb3V0KVxuICB9XG5cbiAgZ29OZXh0ICgpIHtcbiAgICBsZXQgY3Vycl9zdGVwID0gdGhpcy5jdXJyZW50X3N0ZXAgfHwge31cbiAgICBsZXQgX2JuID0gY3Vycl9zdGVwLmNhbGwoJ2JlZm9yZU5leHQnLCBjdXJyX3N0ZXApXG4gICAgaWYgKCFfYm4uc3RhdHVzKSB7XG4gICAgICBpZiAoX2JuLm9uRXJyb3IpIF9ibi5vbkVycm9yLmFwcGx5KGN1cnJfc3RlcClcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuICAgIGxldCBuZXh0X3N0ZXAgPSBjdXJyX3N0ZXAubmV4dCB8fCBudWxsXG4gICAgaWYgKG5leHRfc3RlcCkge1xuICAgICAgdGhpcy5nb1RvU3RlcCh0aGlzLnN0ZXAobmV4dF9zdGVwKSwgeyBmcm9tOiBjdXJyX3N0ZXAubmFtZSB9KVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5vbkZpbmlzaCkge1xuICAgICAgICB0aGlzLm9uRmluaXNoKClcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIGdvQmFjayAoKSB7XG4gICAgbGV0IGN1cnJfc3RlcCA9IHRoaXMuY3VycmVudF9zdGVwIHx8IHt9XG4gICAgbGV0IHByZXZfc3RlcCA9IGN1cnJfc3RlcC5mcm9tIHx8IG51bGxcbiAgICBsZXQgX2JiID0gY3Vycl9zdGVwLmNhbGwoJ2JlZm9yZUJhY2snLCBjdXJyX3N0ZXApIHx8IHsgc3RhdHVzOiBmYWxzZSB9XG4gICAgaWYgKCFfYmIuc3RhdHVzKSB7XG4gICAgICBpZiAoX2JiLm9uRXJyb3IpIF9iYi5vbkVycm9yLmFwcGx5KGN1cnJfc3RlcClcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuICAgIGlmIChwcmV2X3N0ZXApIHtcbiAgICAgIGlmIChfYmIuc3RhdHVzKSB7XG4gICAgICAgIHRoaXMuc3RlcHNfcGFzdC5wb3AoKVxuICAgICAgfVxuICAgICAgdGhpcy5nb1RvU3RlcCh0aGlzLnN0ZXAocHJldl9zdGVwKSwgeyBpc19iYWNrOiB0cnVlIH0pXG4gICAgfVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBnb1RvU3RlcCAoc3RlcCwgcGFyYW1zID0ge30pIHtcbiAgICBsZXQgaXNfc2tpcCA9IHRoaXMuZ2xvYmFsX2ludGVyY2VwdG9ycy5pc1NraXBHbG9iYWwoc3RlcClcbiAgICBpZiAoaXNfc2tpcCkge1xuICAgICAgc3RlcCA9IHRoaXMuc3RlcChzdGVwLm5leHQpXG4gICAgfVxuICAgIGxldCBmcm9tID0gcGFyYW1zLmZyb20gfHwgbnVsbFxuICAgIGxldCBpc19iYWNrID0gcGFyYW1zLmlzX2JhY2sgfHwgZmFsc2VcbiAgICBpZiAoZnJvbSkge1xuICAgICAgc3RlcC5mcm9tID0gZnJvbVxuICAgIH1cbiAgICB0aGlzLnJlbmRlcihzdGVwKVxuICAgIHRoaXMuX2N1cnJlbnRfc3RlcCA9IHN0ZXAubmFtZVxuICAgIGlmICh0aGlzLnN0ZXBzX3Bhc3QuaW5kZXhPZihzdGVwLm5hbWUpIDwgMCkge1xuICAgICAgdGhpcy5zdGVwc19wYXN0LnB1c2goc3RlcC5uYW1lKVxuICAgIH1cbiAgICB0aGlzLnVwZGF0ZVByb2dyZXNzKClcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgY29sbGVjdERhdGEgKCkge1xuICAgIGxldCBkYXRhID0ge31cbiAgICBmb3IgKHZhciBzdGVwIGluIHRoaXMuc3RlcHMpIHtcbiAgICAgIGlmICh0aGlzLnN0ZXAoc3RlcCkuZGF0YSkge1xuICAgICAgICBkYXRhW3N0ZXBdID0gdGhpcy5zdGVwKHN0ZXApLmRhdGFcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGluaXQgKGZpcnN0X3N0ZXApIHtcbiAgICB0aGlzLmZpcnN0X3N0ZXAgPSBmaXJzdF9zdGVwXG4gICAgdGhpcy5jb21tb25IYW5kbGVycygpXG4gICAgdGhpcy5fY3VycmVudF9zdGVwID0gdGhpcy5maXJzdF9zdGVwXG4gICAgdGhpcy5nb1RvU3RlcCh0aGlzLnN0ZXAodGhpcy5fY3VycmVudF9zdGVwKSlcbiAgfVxufVxuIiwiaW1wb3J0IHsgU3RlcCB9IGZyb20gJy4uL2NsYXNzZXMvU3RlcCdcbmltcG9ydCB7IFN0ZXBTeXN0ZW0gfSBmcm9tICcuLi9jbGFzc2VzL1N0ZXBTeXN0ZW0nXG5cbndpbmRvdy5hcHAgPSBuZXcgU3RlcFN5c3RlbSh7XG4gIGNvbnRhaW5lcjogJCgnLmNvbnRhaW5lcicpLFxuICBzdGVwX2NsYXNzOiAnLnN0ZXAnXG59KTtcblxuKGZ1bmN0aW9uIChhcHApIHtcblxuICBjb25zdCBmaXJzdF9zdGVwID0gJ2ZpcnN0LXN0ZXAnXG5cbiAgYXBwXG4gIC8qKlxuICAgKiBDT01NT04gSEFORExFUlNcbiAgICovXG4gIC5zZXRIYW5kbGVycygoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2hhbmRsZXJzIGluaXQnKVxuXG4gIH0pXG4gIFxuICAvKipcbiAgICogRklSU1QgU1RFUFxuICAgKi9cbiAgLmFkZFN0ZXAobmV3IFN0ZXAoe1xuICAgIG5hbWU6ICdmaXJzdC1zdGVwJyxcbiAgICBuZXh0OiAnc2Vjb25kLXN0ZXAnLFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGJlZm9yZVJlbmRlcjogKHN0ZXApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2ZpcnN0LXN0ZXAgYmVmb3JlUmVuZGVyJylcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiB0cnVlIH1cbiAgICAgIH0sXG4gICAgICBiZWZvcmVOZXh0OiAoc3RlcCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnZmlyc3Qtc3RlcCBiZWZvcmVOZXh0JywgdGhpcylcbiAgICAgICAgc3RlcC5kYXRhLmxvbCA9ICdsb2wnXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgb25SZW5kZXI6IChzdGVwKSA9PiB7XG4gICAgICAgIGFwcC5jb250YWluZXIuZmluZCgnLnN0ZXAnKS5jc3Moeydjb2xvcic6ICdncmVlbid9KVxuICAgICAgfVxuICAgIH1cbiAgfSkpXG5cbiAgLyoqXG4gICAqIFNFQ09ORCBTVEVQXG4gICAqL1xuICAuYWRkU3RlcChuZXcgU3RlcCh7XG4gICAgbmFtZTogJ3NlY29uZC1zdGVwJyxcbiAgICBuZXh0OiAndGhpcmQtc3RlcCcsXG4gICAgbWV0aG9kczoge1xuICAgICAgaXNTa2lwOiAoc3RlcCkgPT4ge1xuICAgICAgICByZXR1cm4gYXBwLnN0ZXAoJ2ZpcnN0LXN0ZXAnKS5kYXRhLmxvbCA9PSAnbG9sJ1xuICAgICAgfSxcbiAgICAgIGJlZm9yZVJlbmRlcjogKHN0ZXApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ3NlY29uZC1zdGVwIGJlZm9yZVJlbmRlcicpXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgYmVmb3JlTmV4dDogKHN0ZXApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ3NlY29uZC1zdGVwIGJlZm9yZU5leHQnKVxuICAgICAgICBzdGVwLmRhdGEuYXphemEgPSAnYXphemEnXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgb25SZW5kZXI6IChzdGVwKSA9PiB7XG4gICAgICAgIGFwcC5jb250YWluZXIuZmluZCgnLnN0ZXAnKS5jc3Moeydjb2xvcic6ICdyZWQnfSlcbiAgICAgIH1cbiAgICB9XG4gIH0pKVxuXG4gIC8qKlxuICAgKiBUSElSRCBTVEVQXG4gICAqL1xuICAuYWRkU3RlcChuZXcgU3RlcCh7XG4gICAgbmFtZTogJ3RoaXJkLXN0ZXAnLFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGJlZm9yZVJlbmRlcjogKHN0ZXApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ3RoaXJkLXN0ZXAgYmVmb3JlUmVuZGVyJylcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiB0cnVlIH1cbiAgICAgIH0sXG4gICAgICBiZWZvcmVOZXh0OiAoc3RlcCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygndGhpcmQtc3RlcCBiZWZvcmVOZXh0JylcbiAgICAgICAgc3RlcC5kYXRhLmtlayA9ICdrZWsnXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgb25SZW5kZXI6IChzdGVwKSA9PiB7XG4gICAgICAgIGFwcC5jb250YWluZXIuZmluZCgnLnN0ZXAnKS5jc3Moeydjb2xvcic6ICdibHVlJ30pXG4gICAgICB9XG4gICAgfVxuICB9KSlcblxuICAvKipcbiAgICogRklOSVNIXG4gICAqL1xuICAuYWRkU3RlcChuZXcgU3RlcCh7XG4gICAgbmFtZTogJ2ZpbmlzaCcsXG4gICAgaGlkZV9wcm9ncmVzczogdHJ1ZSxcbiAgICBpZ25vcmVfcHJvZ3Jlc3M6IHRydWUsXG4gICAgbWV0aG9kczoge1xuICAgICAgYmVmb3JlUmVuZGVyOiAoc3RlcCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnZmluaXNoIGJlZm9yZVJlbmRlcicpXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgYmVmb3JlTmV4dDogKHN0ZXApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2ZpbmlzaCBiZWZvcmVOZXh0JylcbiAgICAgICAgc3RlcC5kYXRhLmtlayA9ICdrZWsnXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogdHJ1ZSB9XG4gICAgICB9LFxuICAgICAgb25SZW5kZXI6IChzdGVwKSA9PiB7XG4gICAgICAgIHN0ZXAuY2FsbCgnYW55T2ZJbnRlcm5hbE1ldGhvZHMnKVxuICAgICAgfSxcbiAgICAgIGFueU9mSW50ZXJuYWxNZXRob2RzOiAoKSA9PiB7XG4gICAgICAgIGFsZXJ0ICgnSGV5IHRoZXJlJylcbiAgICAgIH1cbiAgICB9XG4gIH0pKVxuXG4gIC8qKlxuICAgKiBHTE9CQUxcbiAgICovXG5cbiAgYXBwLm9uRmluaXNoID0gKCkgPT4ge1xuICAgIGFwcC5nb1RvU3RlcChhcHAuc3RlcCgnZmluaXNoJykpXG4gICAgY29uc29sZS5sb2coYXBwLmNvbGxlY3REYXRhKCkpXG4gIH1cblxuICBhcHAub25Qcm9ncmVzcyA9IChwcm9ncmVzcykgPT4ge1xuICAgIGFwcC5jb250YWluZXIuZmluZCgnLnByb2dyZXNzJykuaHRtbChNYXRoLmZsb29yKHByb2dyZXNzKSArICclJylcbiAgfVxuXG4gIGFwcC5vblN0ZXBSZW5kZXIgPSAoc3RlcCkgPT4ge1xuICAgIGFwcC5jb250YWluZXIuZmluZCgnLnN0ZXAgLm5leHQnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICBhcHAuZ29OZXh0KClcbiAgICB9KVxuICAgIGFwcC5jb250YWluZXIuZmluZCgnLnN0ZXAgLmJhY2snKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICBhcHAuZ29CYWNrKClcbiAgICB9KVxuXG4gICAgY29uc29sZS5sb2coc3RlcClcblxuICAgIGlmIChzdGVwLmhpZGVfcHJvZ3Jlc3MpIHtcbiAgICAgIGFwcC5jb250YWluZXIuZmluZCgnLnByb2dyZXNzJykuaGlkZSgpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwcC5jb250YWluZXIuZmluZCgnLnByb2dyZXNzJykuc2hvdygpXG4gICAgfVxuICB9XG5cbiAgYXBwLmluaXQoZmlyc3Rfc3RlcClcblxufSkod2luZG93LmFwcClcbiJdfQ=="}